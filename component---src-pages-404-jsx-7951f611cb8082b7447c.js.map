{"version":3,"sources":["webpack:///./src/pages/404.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.jsx","webpack:///./src/components/Footer.jsx","webpack:///./src/components/Header.jsx","webpack:///./src/components/Layout.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","NotFoundPage","_ref","data","location","siteTitle","site","siteMetadata","title","a","createElement","propTypes","PropTypes","object","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","cover","lang","url","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","appid","author","concat","length","join","_public_static_d_4141125833_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Footer","react_default","href","Header","className","src","alt","gatsby_browser_entry","to","Layout","components_Header","components_Footer","node"],"mappings":"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","file":"component---src-pages-404-jsx-7951f611cb8082b7447c.js","sourcesContent":["import '../utils/global.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../components/Layout';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  );\n};\n\nNotFoundPage.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({\n  description, cover, lang, url, meta, keywords, title,\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription = description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:image',\n                content: cover,\n              },\n              {\n                property: 'fb:app_id',\n                content: data.site.siteMetadata.appid,\n              },\n              {\n                property: 'og:url',\n                content: url,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                property: 'twitter:image',\n                content: cover,\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', '),\n                  }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'es',\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  cover: PropTypes.string,\n  url: PropTypes.string,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        appid\n        siteUrl\n      }\n    }\n  }\n`;\n","import React from 'react';\n\nconst Footer = () => (\n  <footer>\n    <span>2019. Bogotá - Colombia - Pa' que te lo goce'</span>\n    <span><a href=\"/rss.xml\">Rss</a></span>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst profilePic = 'https://s3.amazonaws.com/chewiekie/img/anabelisa.png';\n\nconst Header = ({ title }) => (\n  <div className=\"Header\">\n    <h1>\n      <img\n        src={profilePic}\n        alt=\"anabelisa.co\"\n      />\n      <Link to=\"/\">\n        {title}\n      </Link>\n    </h1>\n    <span>Superpoderes en color rosa.</span>\n  </div>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Footer from './Footer';\nimport Header from './Header';\n\nconst Layout = ({ title, children }) => (\n  <div className=\"Layout\">\n    <Header title={title} />\n    {children}\n    <Footer />\n  </div>\n);\n\nLayout.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\n\nexport default Layout;\n"],"sourceRoot":""}